
# NPM package file, see https://docs.npmjs.com/files/package.json
# Oh, this is CSON, not JSON ( see CoffeeScript-Object-Notation https://github.com/bevry/cson )

#####################################################################
#####################################################################

# Master source file used to generate package.json

# DEFAULT METHOD (if package.json is intact):
# npm run cson2json
#
# ALTERNATIVE METHOD (if package.json is corrupted):
# npm install cson
# node ./node_modules/cson/bin/cson2json package.cson > package.json
# Note that on some Windows terminals (e.g. GitShell),
# unfortunately the package.json file might need its encoding
# converted to UTF-no-BOM :(
# This is somehow due to the piped stdout-stdin result being UCS2-little-endian
# (yet this works just fine when the same command is invoked from
# "npm run cson2json" instead of from Node!)

#####################################################################
#####################################################################

'/*': '----------------------------------------------------------------------------'
'..': 'This package.json (JSON) is automatically generated from package.cson (CSON)'
'.-': "DO NOT invoke 'npm init' or 'npm install --save' ('--save-dev' / '--save-optional')"
'._': 'as this would overwrite / update the JSON, not the master CSON!'
'*/': '----------------------------------------------------------------------------'

#####################################################################

name: "readium-shared-js"

version: "0.31.0-alpha"

engines:
    node: ">=4"
    npm: ">=2"
    yarn: ">=0.23"

description: "Readium - shared javascript module"

keywords: [
    "readium"
    "epub"
    "epub3"
]

author:
    name: "Readium (Daniel Weck)"
    email: "daniel.weck@gmail.com"
    url: "http://github.com/readium"

license: "BSD-3-Clause"

licenses: [
    type: "BSD-3-Clause"
    url: "http://opensource.org/licenses/BSD-3-Clause"
]

homepage: "http://github.com/readium/readium-shared-js"

bugs:
    url: "http://github.com/readium/readium-shared-js/issues"
    email: "daniel.weck@gmail.com"

repository:
    type: "git"
    url: "git://github.com/readium/readium-shared-js.git"

#####################################################################
files: [

    "build-output/"

    "dev/"

    "license.txt"

    "README.md"
]

# "main" is designed for Node/CommonJS modules, not RequireJS/AMD ones.
# See http://requirejs.org/docs/commonjs.html
# See http://requirejs.org/docs/node.html
#
main: "build-output/_umd-bundle/readium-shared-js.js"
types: "dev/readium-shared-js.d.ts"

#####################################################################
dependencies:

    "readium-cfi-js": 'latest'


#####################################################################
# These dependencies can be fetched by using the "--dev" option
# in "npm install --dev readium-shared-js".
devDependencies:

    "requirejs": '^2.3.5'

    "almond": '^0.3.3'

    "jquery": '2.x.x'

    "underscore": '^1.8.3'

    "rangy": '^1.3.0'

    "jquery-sizes": 'github:JCCR/jsizes#master'

    "domReady": 'github:requirejs/domReady#master'

    "backbone": '^1.3.3'

    "urijs": 'github:danielweck/URI.js#master'
    #"urijs": 'latest'

    "eventemitter3": '^2.0.3'
    
    "es6-collections": '^0.5.6'

    "cssom": 'github:danielweck/CSSOM#master'
    #"CSSOM": 'github:NV/CSSOM'

    "css-element-queries": 'github:danielweck/css-element-queries#master'


# Below dependencies are only used for building tasks (above are runtime deps):

    #"parallelshell": 'latest'
    "concurrently": '^3.5.0'

    "npm-run-all": '^4.1.2'

    "opener": '^1.4.3'

    #"http-server": 'latest'
    "http-server": 'github:danielweck/http-server#master'
    # SEE: https://github.com/indexzero/http-server/issues/154

    "cson": '^4.1.0'

    "rimraf": '^2.6.2'

    "cpy-cli": '^1.0.1'

    "ncp": '^2.0.0'

    "mkdirp": '^0.5.1'

    "watch": '^1.0.2'

    #"live-reload": 'latest'

    # see readium-build-tools
    # jshint_glob.js
    "jshint": '^2.9.5'
    "glob": '^7.1.2'

    "yuidocjs": '^0.10.2'

    "amdclean": 'github:JCCR/amdclean#master'

#####################################################################
scripts:


#=====================
    cson2json: '

        node ./node_modules/cson/bin/cson2json package.cson > package.json
        &&
        node readium-build-tools/optimizePackageJsonScripts.js
    '


#=====================
    'prepare:all': '

        npm run
            prepare:local
    '

#=====================
    'prepare:local': '

        (npm outdated || echo outdated)
        &&
        npm install
        &&
        npm run prepare:local:common
    '

#=====================
    'prepare:yarn:all': '

        yarn run
            prepare:yarn:local
    '

#=====================
    'prepare:yarn:local': '

        (yarn outdated || echo outdated)
        &&
        yarn install
        &&
        yarn run prepare:local:common
    '

#=====================
    'prepare:local:common': '

        node
            readium-build-tools/gitHubForksUpdater.js
    '

#=====================
    clean: '

        (yarn --version || echo noyarn)
        &&
        node --version
        &&
        npm --version
        &&
        npm run rimraf
            build-output/*
        &&
        npm run rimraf
            api-docs/*
    '

#=====================
    apidocs: '

        npm run yuidocjs
    '

#=====================
    'prebuild': '

        npm run clean
    '

#=====================
    build: '

        npm run
            build:styles
        &&
        npm run
            build:scripts
    '

#=====================
    lint: '

        npm run jshint
            "js/**.js"
    '

#=====================
    'genPluginsConfig': '

        node readium-build-tools/pluginsConfigMaker.js
    '

#=====================
    'prebuild:scripts': '

        npm run genPluginsConfig --readium-shared-js:RJS_PLUGINS_OVERRIDE=no
    '
# RJS_PLUGINS_OVERRIDE can be overridden, via an ENV shell variable:
# e.g. PowerShell:
# Set-Item Env:RJS_PLUGINS_OVERRIDE no
# e.g. OSX terminal:
# RJS_PLUGINS_OVERRIDE=no npm run build
# (temporary, process-specific ENV variable)

#=====================
#    'prebuild:scripts': '
#
#        npm run
#            lint
#    '



#=====================
#    'postbuild:scripts': '
#
#        npm run rimraf
#                build-output/_SOURCES
#    '

#=====================
    'build:scripts': '

        npm run
            build:scripts:multiple --readium-shared-js:RJS_UGLY=no
        &&
        npm run
            build:scripts:single --readium-shared-js:RJS_UGLY=no
        &&
        npm run
            build:scripts:umd --readium-shared-js:RJS_UGLY=no
    '

#=====================
    'build:scripts:multiple': '

        npm run rjs
             --rjs_bundle=multiple
    '

#=====================
    'postbuild:scripts:multiple': '

        npm run rimraf
            build-output/_multiple-bundles/RequireJS.js.src.js
    '

#=====================
    'build:scripts:single': '

        npm run rjs
             --rjs_bundle=single
    '

#=====================
    'build:scripts:umd': '

        npm run rjs
             --rjs_bundle=umd
    '

#=====================
    'prebuild:styles': '

        npm run mkdirp
            build-output/css/
    '

#=====================
# TODO use cssminify
    'build:styles': '

        npm run cpy
            static/sdk.css
            build-output/css/
    '

#=====================
#### BLOCKING! (CTRL-C) [watch][live-reload][http]
    'http:watch': '

        echo > open_webbrowser.js
        &&
        run-p
            \"dowatch\"
            \"httpServe\"
    '
# \"live-reload\"

#=====================
#### BLOCKING! (CTRL-C) [http]
    'http': '
        npm run genPluginsConfig
        &&
        npm run httpServe
    '

#=====================
#### BLOCKING! (CTRL-C) [watch or nodemon]
    'dowatch': '

        npm run watch
            \"npm run build
                && node readium-build-tools/webbrowser.js
                && npm run rimraf
                      open_webbrowser.js\"
            dev/ js/ plugins/
    '
    #    nodemon -q
    #    -w dev/
    #    --ext \".\"
    #    --exec \" ... \"

#=====================
    'httpServe': '

        node
            readium-build-tools/http-server.js
            
            -LOGFILE
            http.log
            
            -OPEN
            /dev/
            
            -c-1
            -a 127.0.0.1
            -p 9090
            --cors
            .
    '

#=====================
#    'live-reload': '
#
#        live-reload --port 9091 --delay 1000 build-output/
#    '
